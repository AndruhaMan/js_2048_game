{"version":3,"sources":["scripts/main.js"],"names":["field","scoreCount","button","document","querySelector","cells","loseMessage","winMessage","startMessage","score","cellsInRow","startGame","textContent","spawnRandomCell","startKeyboardListener","rowIndex","Math","floor","random","columnIndex","renderCells","i","j","rows","className","classList","add","addEventListener","arrowKeyAction","e","oldField","JSON","parse","stringify","key","moveUp","moveDown","moveRight","moveLeft","hasFieldChanged","haveMoves","remove","removeEventListener","isWin","newRow","canMove","move","length","reverse","row","replaceZeros","canMerge","canSlide","haveFreeCells","some","cell","haveMerges","filter","num","push","contains"],"mappings":"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","file":"main.641def2f.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst button = document.querySelector('.button');\nconst cells = document.querySelector('tbody');\nconst loseMessage = document.querySelector('.message-lose');\nconst winMessage = document.querySelector('.message-win');\nconst startMessage = document.querySelector('.message-start');\nconst score = document.querySelector('.game-score');\n\nconst cellsInRow = 4;\nlet field;\nlet scoreCount;\n\nbutton.addEventListener('click', () => {\n  if (button.classList.contains('start')) {\n    button.classList.remove('start');\n    button.classList.add('restart');\n    button.textContent = 'Restart';\n    startMessage.classList.add('hidden');\n    startGame();\n  } else {\n    startGame();\n    loseMessage.classList.add('hidden');\n    winMessage.classList.add('hidden');\n  }\n});\n\nfunction startGame() {\n  field = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n  scoreCount = 0;\n  score.textContent = scoreCount;\n  spawnRandomCell();\n  startKeyboardListener();\n}\n\nfunction spawnRandomCell() {\n  while (true) {\n    const rowIndex = Math.floor(Math.random() * cellsInRow);\n    const columnIndex = Math.floor(Math.random() * cellsInRow);\n\n    if (field[rowIndex][columnIndex] === 0) {\n      field[rowIndex][columnIndex] = Math.random() >= 0.9 ? 4 : 2;\n      break;\n    }\n  }\n\n  renderCells();\n}\n\nfunction renderCells() {\n  for (let i = 0; i < cellsInRow; i++) {\n    for (let j = 0; j < cellsInRow; j++) {\n      cells.rows[i].cells[j].className = '';\n      cells.rows[i].cells[j].classList.add(`field-cell`);\n      cells.rows[i].cells[j].classList.add(`field-cell--${field[i][j]}`);\n      cells.rows[i].cells[j].textContent = field[i][j] || '';\n    }\n  }\n}\n\nfunction startKeyboardListener() {\n  document.addEventListener('keydown', arrowKeyAction);\n}\n\nfunction arrowKeyAction(e) {\n  const oldField = JSON.parse(JSON.stringify(field));\n\n  switch (e.key) {\n    case 'ArrowUp':\n      moveUp();\n      break;\n    case 'ArrowDown':\n      moveDown();\n      break;\n    case 'ArrowRight':\n      moveRight();\n      break;\n    case 'ArrowLeft':\n      moveLeft();\n      break;\n  }\n\n  if (hasFieldChanged(oldField)) {\n    spawnRandomCell();\n    score.textContent = scoreCount;\n  }\n\n  if (!haveMoves()) {\n    loseMessage.classList.remove('hidden');\n    document.removeEventListener('keydown', arrowKeyAction);\n  }\n\n  if (isWin()) {\n    winMessage.classList.remove('hidden');\n  }\n}\n\nfunction moveUp() {\n  for (let i = 0; i < cellsInRow; i++) {\n    let newRow = [\n      field[0][i],\n      field[1][i],\n      field[2][i],\n      field[3][i],\n    ];\n\n    if (canMove(newRow)) {\n      newRow = move(newRow);\n\n      for (let j = 0; j < newRow.length; j++) {\n        field[j][i] = newRow[j];\n      }\n    }\n  }\n}\n\nfunction moveDown() {\n  for (let i = 0; i < cellsInRow; i++) {\n    let newRow = [\n      field[0][i],\n      field[1][i],\n      field[2][i],\n      field[3][i],\n    ];\n\n    if (canMove([...newRow].reverse())) {\n      newRow = move(newRow.reverse()).reverse();\n\n      for (let j = 0; j < newRow.length; j++) {\n        field[j][i] = newRow[j];\n      }\n    }\n  }\n}\n\nfunction moveLeft() {\n  for (let i = 0; i < cellsInRow; i++) {\n    let newRow = field[i];\n\n    if (canMove(newRow)) {\n      newRow = move(field[i]);\n\n      for (let j = 0; j < newRow.length; j++) {\n        field[i][j] = newRow[j];\n      }\n    }\n  }\n}\n\nfunction moveRight() {\n  for (let i = 0; i < cellsInRow; i++) {\n    let newRow = field[i];\n\n    if (canMove([...newRow].reverse())) {\n      newRow = move(newRow.reverse()).reverse();\n\n      for (let j = 0; j < newRow.length; j++) {\n        field[i][j] = newRow[j];\n      }\n    }\n  }\n}\n\nfunction move(row) {\n  let newRow = replaceZeros(row);\n\n  for (let i = 0; i < newRow.length; i++) {\n    if (newRow[i] === newRow[i + 1] && newRow[i] !== 0) {\n      newRow[i] = newRow[i] * 2;\n      newRow[i + 1] = 0;\n      scoreCount += newRow[i];\n    }\n  }\n\n  newRow = replaceZeros(newRow);\n\n  return newRow;\n}\n\nfunction canMove(row) {\n  for (let i = 0; i < row.length - 1; i++) {\n    const canMerge = (row[i] === row[i + 1]) && (row[i] !== 0);\n    const canSlide = (row[i] === 0) && (row[i + 1] !== 0);\n\n    if (canMerge || canSlide) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction haveMoves() {\n  const haveFreeCells = field.some(row => row.some(cell => cell === 0));\n  let haveMerges = false;\n\n  for (let i = 0; i < cellsInRow; i++) {\n    for (let j = 0; j < cellsInRow - 1; j++) {\n      if (field[i][j] === field[i][j + 1]) {\n        haveMerges = true;\n        break;\n      }\n    }\n  }\n\n  for (let i = 0; i < cellsInRow - 1; i++) {\n    for (let j = 0; j < cellsInRow; j++) {\n      if (field[i][j] === field[i + 1][j]) {\n        haveMerges = true;\n        break;\n      }\n    }\n  }\n\n  return haveFreeCells || haveMerges;\n}\n\nfunction isWin() {\n  for (let i = 0; i < cellsInRow; i++) {\n    for (let j = 0; j < cellsInRow; j++) {\n      if (field[i][j] === 2048) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction replaceZeros(row) {\n  const newRow = row.filter(num => num !== 0);\n\n  while (newRow.length < cellsInRow) {\n    newRow.push(0);\n  }\n\n  return newRow;\n}\n\nfunction hasFieldChanged(oldField) {\n  for (let i = 0; i < cellsInRow; i++) {\n    for (let j = 0; j < cellsInRow; j++) {\n      if (oldField[i][j] !== field[i][j]) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n"]}